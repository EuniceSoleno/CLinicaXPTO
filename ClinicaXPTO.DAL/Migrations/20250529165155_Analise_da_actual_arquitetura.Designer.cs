// <auto-generated />
using System;
using ClinicaXPTO.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CLinicaXPTO.DAL.Migrations
{
    [DbContext(typeof(CLinicaXPTODBContext))]
    [Migration("20250529165155_Analise_da_actual_arquitetura")]
    partial class Analise_da_actual_arquitetura
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CLinicaXPTO.Model.ActoClinico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PedidoMarcacaoId")
                        .HasColumnType("int");

                    b.Property<string>("_Subsistema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_TipoConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idProfissional")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoMarcacaoId");

                    b.ToTable("Actos");
                });

            modelBuilder.Entity("CLinicaXPTO.Model.PedidoMarcacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAgendada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstadoMarcacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntervaloData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtenteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("CLinicaXPTO.Model.Profissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("profissionais");
                });

            modelBuilder.Entity("CLinicaXPTO.Model.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Fotografia")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utentes");
                });

            modelBuilder.Entity("CLinicaXPTO.Model.ActoClinico", b =>
                {
                    b.HasOne("CLinicaXPTO.Model.PedidoMarcacao", null)
                        .WithMany("ActosClinicos")
                        .HasForeignKey("PedidoMarcacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CLinicaXPTO.Model.PedidoMarcacao", b =>
                {
                    b.HasOne("CLinicaXPTO.Model.Utente", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CLinicaXPTO.Model.PedidoMarcacao", b =>
                {
                    b.Navigation("ActosClinicos");
                });

            modelBuilder.Entity("CLinicaXPTO.Model.Utente", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
